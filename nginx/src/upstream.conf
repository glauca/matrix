http {
    upstream backend {
        # Use NGINX shared memory
        zone backend 64k;

        # distributing the new requests to a less busy server
        least_conn;

        # maintain a maximum of 20 idle connections to each upstream server
        # For FastCGI servers, it is required to set fastcgi_keep_conn for keepalive connections to work
        #keepalive 20;

        # Apply session persistence for this upstream group
        #sticky cookie srv_id expires=1h domain=.example.com path=/servlet;

        # the same client will always be directed to the same server
        #ip_hash;

        server srv1.example.com weight=3;
        server srv2.example.com weight=7;
        server srv3.example.com backup down;
        server 127.0.0.1:8080 max_fails=3 fail_timeout=15s;
        #server unix:/tmp/backend slow_start=30s;
    }

    server {
        listen 80;
        server_name www.example.org;
        root /data/www;

        index index.html index.htm index.php;

        location / {
            proxy_connect_timeout 600;
            proxy_read_timeout 600;
            proxy_send_timeout 600;
            proxy_pass http://backend;

            proxy_buffer_size 32k;
            proxy_buffers 4 32k;
            proxy_busy_buffers_size 64k;

            proxy_cache proxy_cache;
            proxy_cache_path proxy/cache levels=1:2 keys_zone=proxy_cache:200m inactive=1d max_size=30g;
            proxy_cache_use_stale error timeout invalid_header updating http_500 http_502 http_503 http_504 http_404;
            proxy_cache_valid 200 304 12h;
            proxy_cache_valid 301 302 1m;
            proxy_cache_valid any 1m;

            proxy_ignore_client_abort on;
            proxy_ignore_headers "Cache-Control" "Expires";
            proxy_next_upstream error timeout invalid_header http_502 http_504;

            proxy_temp_path proxy/temp 1 2;
            proxy_temp_file_write_size 1024k;

            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_set_header Accept-Encoding "";
            proxy_set_header X-Forwarded-For $remote_addr;
            proxy_redirect http://staging.example.com/ http://$host/;

            # Rewrite the 'Host' header to the value in the client request,
            # or primary server name
            proxy_set_header Host $host;

            # Alternatively, put the value in the config:
            # proxy_set_header Host www.example.com;

            # Replace any references inline to staging.example.com
            sub_filter http://staging.example.com/ /;
            sub_filter_once off;
        }

        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|ico|wav|mid|js|css|html)?$ {
            proxy_cache cache_static;
            proxy_pass http://static_server;
            expires 1d;
        }
    }

    match statusok {
        # Used for /test.php health check
        status 200;
        header Content-Type = text/html;
        body ~ "Server[0-9]+ is alive";
    }
}
